/* tslint:disable */
/* eslint-disable */
/**
 * English Teacher
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
} from './Message';

/**
 * 
 * @export
 * @interface Conversation
 */
export interface Conversation {
    /**
     * 
     * @type {string}
     * @memberof Conversation
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Conversation
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof Conversation
     */
    createdAt: string;
    /**
     * 
     * @type {Array<Message>}
     * @memberof Conversation
     */
    messages?: Array<Message> | null;
}

/**
 * Check if a given object implements the Conversation interface.
 */
export function instanceOfConversation(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "createdAt" in value;

    return isInstance;
}

export function ConversationFromJSON(json: any): Conversation {
    return ConversationFromJSONTyped(json, false);
}

export function ConversationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Conversation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userId': json['userId'],
        'createdAt': json['createdAt'],
        'messages': !exists(json, 'messages') ? undefined : (json['messages'] === null ? null : (json['messages'] as Array<any>).map(MessageFromJSON)),
    };
}

export function ConversationToJSON(value?: Conversation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'userId': value.userId,
        'createdAt': value.createdAt,
        'messages': value.messages === undefined ? undefined : (value.messages === null ? null : (value.messages as Array<any>).map(MessageToJSON)),
    };
}

