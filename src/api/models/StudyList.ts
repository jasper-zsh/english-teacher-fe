/* tslint:disable */
/* eslint-disable */
/**
 * English Teacher
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WordInStudyList } from './WordInStudyList';
import {
    WordInStudyListFromJSON,
    WordInStudyListFromJSONTyped,
    WordInStudyListToJSON,
} from './WordInStudyList';

/**
 * 
 * @export
 * @interface StudyList
 */
export interface StudyList {
    /**
     * 
     * @type {string}
     * @memberof StudyList
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof StudyList
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof StudyList
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof StudyList
     */
    createdAt: string;
    /**
     * 
     * @type {string}
     * @memberof StudyList
     */
    updatedAt: string;
    /**
     * 
     * @type {Array<WordInStudyList>}
     * @memberof StudyList
     */
    words?: Array<WordInStudyList>;
}

/**
 * Check if a given object implements the StudyList interface.
 */
export function instanceOfStudyList(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function StudyListFromJSON(json: any): StudyList {
    return StudyListFromJSONTyped(json, false);
}

export function StudyListFromJSONTyped(json: any, ignoreDiscriminator: boolean): StudyList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userId': json['userId'],
        'name': json['name'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'words': !exists(json, 'words') ? undefined : ((json['words'] as Array<any>).map(WordInStudyListFromJSON)),
    };
}

export function StudyListToJSON(value?: StudyList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'userId': value.userId,
        'name': value.name,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'words': value.words === undefined ? undefined : ((value.words as Array<any>).map(WordInStudyListToJSON)),
    };
}

